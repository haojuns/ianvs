algorithm:
  # paradigm type; string type;
  # currently the options of value are as follows:
  #   1> "singletasklearning"
  #   2> "incrementallearning"
  #   3> "lifelonglearning"
  paradigm_type: "lifelonglearning"
  lifelong_learning_data_setting:
    # ratio of training dataset; float type;
    # the default value is 0.8.
    train_ratio: 0.8
    # the method of splitting dataset; string type; optional;
    # currently the options of value are as follows:
    #   1> "default": the dataset is evenly divided based train_ratio;
    #   2> "predefined": the dataset is divided previously.
    splitting_method: "default"
    # splitting_method: "predefined"

  # algorithm module configuration in the paradigm; list type;
  modules:
    # type of algorithm module; string type;
    # currently the options of value are as follows:
    #   1> "basemodel": contains important interfaces such as train、 eval、 predict and more; required module;
    - type: "basemodel"
      # name of python module; string type;
      # example: basemodel.py has BaseModel module that the alias is "FPN" for this benchmarking;
      name: "BaseModel"
      # the url address of python module; string type;
      url: "./examples/curb-detection/lifelong_learning_bench_ours/testalgorithms/rfnet/basemodel.py"
      # hyperparameters configuration for the python module; list type;
      hyperparameters:
        # name of the hyperparameter; string type;
        - learning_rate:
            values:
              - 0.0001
    #  2> "task_definition": define lifelong task ; optional module;
    - type: "task_definition"
      # name of python module; string type;
      name: "TaskDefinitionAll"
      # the url address of python module; string type;
      url: "./examples/curb-detection/lifelong_learning_bench_ours/testalgorithms/rfnet/task_definition_all.py"
      # hyperparameters configuration for the python module; list type;
      hyperparameters:
        # name of the hyperparameter; string type;
        # origins of data; value is ["real", "sim"], this means that data from real camera and simulator.
        - origins:
            values:
              # - [ "real", "sim" ]
              - ["all"]
    #  3> "task_allocation": allocate lifelong task ; optional module;
    - type: "task_allocation"
      # name of python module; string type;
      name: "TaskAllocationAll"
      # the url address of python module; string type;
      url: "./examples/curb-detection/lifelong_learning_bench_ours/testalgorithms/rfnet/task_allocation_all.py"
      # hyperparameters configuration for the python module; list type;
      hyperparameters:
        # name of the hyperparameter; string type;
        # origins of data; value is ["real", "sim"], this means that data from real camera and simulator.
        - origins:
            values:
              # - [ "real", "sim" ]
              - ["all"]
    #  4> "task_update_decision"
    - type: "task_update_decision"
      name: "TaskUpdateDecisionAll"
      url: "./examples/curb-detection/lifelong_learning_bench_ours/testalgorithms/rfnet/task_update_decision_all.py"
